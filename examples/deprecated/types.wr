

## Some types in wright. 

type MyUnion = void | String constrain not String::empty;
type TaggedUnion = { None: void | Name: String constrain not String::empty };

type MyRecord = { field1: String, field2: integer, field3: integer constrain in 0..=255 };

type MyEnum = enum of void { VariantA, VariantB, VariantC };

record MyRecord2 {
    field1: String constrain not String::empty,
    
}
