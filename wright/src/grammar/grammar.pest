dec_digit = _{'0' .. '9'}
oct_digit = _{'0' .. '7'}
hex_digit = _{dec_digit | 'a'..'f' | 'A'..'F'}
alpha = _{'a'..'z' | 'A'..'Z'}
alphanumeric = _{alpha | dec_digit}

CLASS  = _{"class"}
STRUCT = _{"struct"}
ENUM = _{"enum"}
TYPE = _{"type"}
UNION = _{"union"}
MOD = _{"mod"}
MODULE = _{"module"}
FN = _{"fn"}
ABSTRACT = _{"abstract"}
INTERNAL = _{"internal"}
EXTERNAL = _{"external"}
INTERFACE = _{"interface"}
EXTENDS = _{"extends"}
IMPLEMENTS = _{"implements"}
OVERRIDES = _{"overrides"}
OVERRIDE = _{"override"}
WITH = _{"with"}
INLINE = _{"inline"}
SEALED = _{"sealed"}
IMPL = _{"impl"}
IMPLEMENT = _{"implement"}
TEMPLATE = _{"template"}
PROTOTYPE = _{"prototype"}
CONSTRUCTOR = _{"constructor"}
EXTERN = _{"extern"}
CONST = _{"const"}
CONSTANT = _{"constant"}
TRAIT = _{"trait"}
WHERE = _{"where"}
FOR = _{"for"}
WHILE = _{"while"}
IF = _{"if"}
ELSE = _{"else"}
ELIF = _{"elif"}
IN = _{"in"}
AS = _{"as"}
WHEN = _{"when"}
MATCH = _{"match"}
BREAK = _{"break"}
RETURN = _{"return"}
CONTINUE = _{"continue"}
DEFAULT = _{"default"}
VAR = _{"var"}
VAL = _{"val"}
MOVE = _{"move"}
SELF_REFRENCE = _{"self"}
SELF_TYPE = _{"Self"}
MUT = _{"mut"}
LET = _{"let"}
VOLATILE = _{"volatile"}
SYNCHRONIZED = _{"synchronized"}
ATOMIC = _{"atomic"}
STATIC = _{"static"}
FINAL = _{"final"}
PUB = _{"pub"}
PUBLIC = _{"public"}
PRIV = _{"priv"}
PRIVATE = _{"private"}
HIDDEN = _{"hidden"}

BOOL = _{"bool"}
BOOLEAN = _{"boolean"}
SHORT = _{"short"}
HALF = _{"half"}
CHARACTER = _{"character"}
INTEGER = _{"integer"}
FLOAT = _{"float"}
LONG = _{"long"}
DOUBLE = _{"double"}
U1 = _{"u1"}
U8 = _{"u8"}
I8 = _{"i8"}
U16 = _{"u16"}
I16 = _{"i16"}
F16 = _{"f16"}
CHAR = _{"char"}
U32 = _{"u32"}
I32 = _{"i32"}
F32 = _{"f32"}
USIZE = _{"usize"}
ISIZE = _{"isize"}
UPTR = _{"uptr"}
IPTR = _{"iptr"}
U64 = _{"u64"}
I64 = _{"i64"}
F64 = _{"f64"}
U128 = _{"u128"}
I128 = _{"i128"}
F128 = _{"f128"}
SIGNED = _{"signed"}
UNSIGNED = _{"unsigned"}

visibility_modifier = {
    PRIV |
    PRIVATE |
    PUB |
    PUBLIC |
    HIDDEN
}

type_modifier = { SIGNED | UNSIGNED }

primitive_type_keyword = {
    I128 | U128 | F128 |
    I64 | U64 | F64 | LONG | DOUBLE |
    I32 | U32 | F32 | INTEGER | FLOAT |
    IPTR | UPTR | ISIZE | USIZE |
    I16 | U16 | F16 | SHORT | HALF |
    CHAR | CHARACTER |
    BOOL |  BOOLEAN  | U1
}

keyword = {
    primitive_type_keyword
}

identifier = @{!keyword ~ (alpha ~ alphanumeric*)}

newline = _{"\n" | "\r\n"}

// see https://en.wikipedia.org/wiki/Whitespace_character
whitespace = _{
    newline |
    "\t" |
    "\u{000B}" |
    "\u{000C}" |
    " " |
    "\u{0085}" |
    "\u{00A0}" |
    "\u{1680}" |
    ('\u{2000}'..'\u{200A}') |
    "\u{2028}" |
    "\u{2029}" |
    "\u{202F}" |
    "\u{205F}" |
    "\u{3000}" |
    "\u{180E}" |
    "\u{200B}" |
    "\u{200C}" |
    "\u{200D}" |
    "\u{2060}" |
    "\u{FEFF}"
}

comment = _{ single_line_comment | multi_line_comment }
single_line_comment = {"//" ~ (!newline ~ any)* ~ (newline | eoi)}
multi_line_comment = {"/*" ~ ((!"*/" ~ !"/*" ~ any)* ~ multi_line_comment*)* ~ "*/"}
